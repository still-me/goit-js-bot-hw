//* map()

/* Метод map()
Большинство перебирающих методов массива это чистые функции. Они создают новый массив, заполняют его, применяя к значению каждого элемента указанную callback-функцию, после чего возвращают этот новый массив.

Метод map(callback) используется для трансформации массива. Он вызывает callback-функцию для каждого элемента исходного массива, а результат её работы записывает в новый массив, который и будет результатом выполнения метода.

!массив.map((element, index, array) => {
!  // Тело callback-функции
!});
Поэлементно перебирает оригинальный массив.
Не изменяет оригинальный массив.
Результат работа callback-функции записывается в новый массив.
Возвращает новый массив такой же длины.
Его можно использовать для того, чтобы изменить каждый элемент массива. Оригинальный массив используется как эталон, на базе которого можно сделать другую коллекцию.

!const planets = ['Земля', 'Марс', 'Венера', 'Юпитер'];

!const planetsInUpperCase = planets.map((planet) => planet.toUpperCase());
!console.log(planetsInUpperCase); // ['ЗЕМЛЯ', 'МАРС', 'ВЕНЕРА', 'ЮПИТЕР']
!
!const planetsInLowerCase = planets.map((planet) => planet.toLowerCase());
!console.log(planetsInLowerCase); // ['земля', 'марс', 'венера', 'юпитер']

// Оригинальный массив не изменился
!console.log(planets); // ['Земля', 'Марс', 'Венера', 'Юпитер']
Использование анонимных стрелочных функций с неявным возвратом сильно сокращает «шум» объявления callback-функции, делая код чище и проще для восприятия.

 */

 const planets = ['Земля', 'Марс', 'Венера', 'Юпитер'];
// Пиши код ниже этой строки
const planetsLengths = planets.map(planet => planet.length);

console.log(planetsLengths);